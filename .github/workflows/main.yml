name: DAST Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * 1'  # Run every Monday at 2 AM UTC
  workflow_dispatch:  # Allow manual triggering

jobs:
  dast-scan:
    name: OWASP ZAP DAST Scan
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      security-events: write
      issues: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Create sample web application
        run: |
          mkdir -p sample-app
          cd sample-app
          npm init -y
          npm install express
          
          cat > server.js << 'EOF'
          const express = require('express');
          const app = express();
          const PORT = 3000;

          app.use(express.json());
          app.use(express.urlencoded({ extended: true }));

          // Home page
          app.get('/', (req, res) => {
            res.send(`
              <!DOCTYPE html>
              <html>
              <head><title>Sample App</title></head>
              <body>
                <h1>Sample Application for DAST Testing</h1>
                <ul>
                  <li><a href="/about">About</a></li>
                  <li><a href="/contact">Contact</a></li>
                  <li><a href="/api/users">API Users</a></li>
                </ul>
                <form action="/search" method="GET">
                  <input type="text" name="q" placeholder="Search...">
                  <button type="submit">Search</button>
                </form>
              </body>
              </html>
            `);
          });

          // About page
          app.get('/about', (req, res) => {
            res.send('<h1>About Us</h1><p>This is a sample application.</p>');
          });

          // Contact page
          app.get('/contact', (req, res) => {
            res.send(`
              <h1>Contact</h1>
              <form action="/contact" method="POST">
                <input type="text" name="name" placeholder="Name"><br>
                <input type="email" name="email" placeholder="Email"><br>
                <textarea name="message" placeholder="Message"></textarea><br>
                <button type="submit">Submit</button>
              </form>
            `);
          });

          // Handle contact form
          app.post('/contact', (req, res) => {
            res.send('<h1>Thank you!</h1><p>Your message has been received.</p>');
          });

          // Search endpoint
          app.get('/search', (req, res) => {
            const query = req.query.q || '';
            res.send(`<h1>Search Results for: ${query}</h1>`);
          });

          // API endpoint
          app.get('/api/users', (req, res) => {
            res.json([
              { id: 1, name: 'John Doe', email: 'john@example.com' },
              { id: 2, name: 'Jane Smith', email: 'jane@example.com' }
            ]);
          });

          // API endpoint with parameter
          app.get('/api/users/:id', (req, res) => {
            const userId = req.params.id;
            res.json({ id: userId, name: 'Sample User', email: 'user@example.com' });
          });

          app.listen(PORT, () => {
            console.log(`Server running at http://localhost:${PORT}`);
          });
          EOF
      
      - name: Start sample application
        run: |
          cd sample-app
          node server.js &
          sleep 5
          curl http://localhost:3000 || exit 1
      
      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: 'http://localhost:3000'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
          
      - name: Upload ZAP Scan Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: zap-scan-report
          path: report_html.html
          retention-days: 30
      
      - name: Upload SARIF results to GitHub
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: report_json.sarif
          category: dast-zap
